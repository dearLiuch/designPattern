策略模式：
1.策略模式使用场景：定义了一组算法，不同的算法封装成一个个策略（结合实际业务场景理解）

1.熟练掌握策略模式UML模式图；

2.涉及角色：
抽象策略角色、具体策略角色、封装角色（上下文封装角色持有抽象策略角色引用，并且调用策略方法）；

3.能够熟练编写策略模式代码；

4.策略模式优点：
它能将不同的算法逻辑屏蔽掉，service层业务逻辑会显得非常清晰，清楚每一步在做什么，不会在一个service方法中突然出现一大堆算法逻辑；
比如说，service层：下订单、生成订单、结算金额（打折、满减），结算策略内部逻辑代码不会出现在service类，而是写在具体策略类实现；

5.策略模式缺点：
客户端必须知道所有的策略类，并自行决定选择哪个策略，这就要求客户端必须理解每个策略类的区别。
由于策略模式将每个具体实现的策略单独封装成类，如果备选的策略较多，那么代码量会很大。


6.策略模式在源码中、项目中、生活场景中的应用举例
生活场景：
商场活动营销方式：打折、满减；

一个对象真正的是需要频繁创建的，而且这个过程特别复杂，此时需要用到工厂模式；

