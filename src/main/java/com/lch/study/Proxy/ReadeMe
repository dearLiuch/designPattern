代理模式作用：为其他对象提供一种代理以控制对这个对象的访问

代理模式角色：
抽象角色：声明真实对象和代理对象的共同接口
代理角色：代理对象角色内部含有对真实对象的引用，从而可以操作真实对象，同时代理对象提供与真实对象相同的接口以便在任何
时刻都能代替真实对象。同时，代理对象可以在执行真实对象操作时，附加其他操作，相当于对真实对象进行封装。
真实角色：代理角色所代表的真实对象，即最终要引用的对象。

代理模式优点：
可以做到不修改目标对象的功能前提下，对目标功能扩展。
缺点：每一个代理类都必须实现一遍委托类realSubject的接口，如果接口增加方法，则代理类也必须跟着修改。
其次，代理类每一个接口对象对应一个委托对象，如果委托对象非常多，则静态代理类就非常臃肿。

todo 没理解 动态代理相比静态代理的好处
动态代理解决静态代理中代理类接口过多的问题，通过反射来实现，借助java.lang.reflect.Proxy，通过固定规则生成。

动态代理核心代码：
Proxy.newProxyInstance(ClassLoader loader,Class<?>[] interfaces, InvocationHandler handler)方法
loader:指定代理对象的类加载器； todo 这个代理对象指的是真实对象
interfaces：代理对象需要实现的接口，可以同时指定多个接口
handler：方法调用的实际处理者，代理对象的方法调用都会转发到这里

todo 理解Proxy源码